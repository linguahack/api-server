// Generated by CoffeeScript 1.8.0
(function() {
  var api_key, async, base_url, request;

  module.exports = this;

  api_key = "38822628893b580eec3f6df039b687ed";

  base_url = 'http://api.themoviedb.org/3';

  this.append_to_schemas = function(schemas) {
    schemas.serial_schema.virtual("tmdb.url").get(function() {
      return base_url + ("/tv/" + this.tmdb.id);
    });
    schemas.serial_schema.virtual("tmdb.poster").get(function() {
      return "http://image.tmdb.org/t/p/w342/" + this.tmdb.poster_path;
    });
    schemas.serial_schema.virtual("tmdb.backdrop").get(function() {
      return "http://image.tmdb.org/t/p/original/" + this.tmdb.backdrop_path;
    });
    schemas.serial_schema.methods.tmdb_search = function(cb) {
      return request({
        url: base_url + '/search/tv',
        json: true,
        qs: {
          api_key: api_key,
          query: this.name
        }
      }, (function(_this) {
        return function(err, response, body) {
          if (err) {
            cb(err);
            return;
          }
          _this.tmdb.id = body.results[0].id;
          return cb(null);
        };
      })(this));
    };
    schemas.serial_schema.methods.tmdb_get_main_info = function(cb) {
      return request({
        url: this.tmdb.url,
        json: true,
        qs: {
          api_key: api_key
        }
      }, (function(_this) {
        return function(err, response, body) {
          if (err) {
            cb(err);
            return;
          }
          _this.tmdb.backdrop_path = body.backdrop_path;
          _this.tmdb.poster_path = body.poster_path;
          return cb(null);
        };
      })(this));
    };
    schemas.serial_schema.methods.tmdb_refresh = function(cb) {
      var tasks;
      tasks = [];
      if (this.tmdb.id == null) {
        tasks.push(this.tmdb_search.bind(this));
      }
      tasks.push(this.tmdb_get_main_info.bind(this));
      tasks.push(this.save.bind(this));
      return async.series(tasks, cb);
    };
    return schemas.serial_schema.statics.tmdb_refresh_all = function(cb) {
      return this.find({}, (function(_this) {
        return function(err, results) {
          return async.each(results, function(serial, cb) {
            return serial.tmdb_refresh(cb);
          }, cb);
        };
      })(this));
    };
  };

}).call(this);
